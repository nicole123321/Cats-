{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Artifical Agents Extended- Nicole Rangan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For this project, I decided to modify A4 Artificial Agents to add more attributes to the agents made. I made an Animal super class, and a Cat class which inherits from Animal super class. I decided to only have one subclass than more so I could focus on making it do different things (such as fight and eat) with each other, and on the board. \n",
    "Although the projects concept is seemingly straightforward, it involved a lot of manipulation of lists, loops, conditionals, and working with class attributes. The approach to do simple tasks, such as add food character to a grid, involved an algorithimic approach which was first mapped on paper, and then written in code. This was the approach for many of the methods created within and outside the class. \n",
    "\n",
    "A lot of this project involved connections between actions of the Animal class. You can see how it alternates between fight moves, and how move can be manipulated if it eats. This part of the code was difficult to approach as it left room for error and made it hard to debug. I broke it into smaller components (like the fight method, how the grid updates the fight method) and put it all together. \n",
    "\n",
    "The outside methods and board, that are called on within the board, I put in a python file, and imported it into the jupyter notebook. I did the same with the Animal class, to make it more clear what the different components of the project are. The actual execution of the project is shown and done within the jupyter notebook because it is able to show the movement of the animal within the board better than in a terminal. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "from my_module.functions import *\n",
    "from my_module.Animal import*\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ". . . . 学 . * . . .\n",
      ". . . . . . . . * .\n",
      ". . . . * * . . . *\n",
      "* . * . . . . . . .\n",
      ". . . . . . . * . .\n",
      ". . . 学 . . . . * *\n",
      "* * 学 . 学 . . . * .\n",
      ". . . . . * . . . *\n",
      ". . . * . . * . * *\n",
      ". . . . . . . * . *\n"
     ]
    }
   ],
   "source": [
    "\"\"\" character and name can be changed according to who is using board\n",
    "more cat classes can be made, and used on the board.\"\"\"\n",
    "cat1= Cat(character=1127, name='cat1')\n",
    "cat2= Cat(character=1127, name='cat24')\n",
    "cat3= Cat(character=1127, name='cat1')\n",
    "cat4= Cat(character=1127, name='cat24')\n",
    "cat5= Cat(character=1127, name='cat24')\n",
    "\n",
    "animals= [cat1, cat2, cat3, cat4, cat5, Cat(character=1127, name='cat24'),Cat(character=1127, name='cat24'),Cat(character=1127, name='cat24'),Cat(character=1127, name='cat24'),Cat(character=1127, name='cat24'),Cat(character=1127, name='cat24')]\n",
    "\n",
    "\n",
    "\"\"\"the board can be customized to the users liking. Here, play board is\n",
    "called and the cats can be seen on the grid\n",
    "The bigger the iterations, the more you can see how the fight methods\n",
    "eliminate the other animals accordingly\"\"\"\n",
    "play_board(animals, grid_size=10, n_iter=30)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
